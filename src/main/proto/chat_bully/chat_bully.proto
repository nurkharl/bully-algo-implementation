syntax = "proto3";

import "google/protobuf/empty.proto";
package chat_bully;

option java_multiple_files = true;
option java_package = "com.proto.chat_bully";


service Node {
  rpc SendMessage (MessageRequest) returns (MessageResponse) {}
  rpc StartElection (ElectionRequest) returns (ElectionResponse);
  rpc AnnounceLeader (LeaderAnnouncementRequest) returns (LeaderAnnouncementResponse);
  rpc UpdateTopology (UpdateTopologyRequest) returns (UpdateTopologyResponse);
  rpc Join (JoinRequest) returns (JoinResponse);
  rpc IsNodeAlive(AliveRequest) returns (AliveResponse);
  rpc QuitTopology(QuitTopologyRequest) returns (QuitTopologyResponse);
}

message MessageRequest {
  string message = 1;
  int32 senderId = 2;
  int32 receiverId = 3;
}

message MessageResponse {
  bool ack = 1;
}

message ElectionRequest {
  int32 nodeId = 1;
}

message ElectionResponse {
  bool ack = 1;
}

message LeaderAnnouncementRequest {
  int32 leaderId = 1;
  string hostname = 2;
}

message LeaderAnnouncementResponse {
  bool ack = 1;
}

message JoinResponse {
  bool ack = 1;
  Address leader = 2;
  AvailableNodesAddressesList availableNodesAddressesList = 3;
}

message JoinRequest {
  string hostname = 1;
  int32 port = 2;
  int32 nodeId = 3;
}

message Address {
  string hostname = 1;
  int32 port = 2;
  int32 nodeId = 3;
}

message AvailableNodesAddressesList {
  repeated Address addresses = 1;
}

message UpdateTopologyRequest {
  AvailableNodesAddressesList availableNodesAddressesList = 1;
}

message UpdateTopologyResponse {
  bool ack = 1;
}

message AliveRequest {
  int32 senderNodeID = 1;
}

message AliveResponse {
  bool ack = 1;
}

message QuitTopologyRequest {
  int32 senderNodeId = 1;
}

message QuitTopologyResponse {
  bool ack = 1;
}